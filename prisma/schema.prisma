generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Train {
  id            String    @id @default(cuid())
  trainNumber   String    @unique
  source        String
  destination   String
  departureTime DateTime
  arrivalTime   DateTime
  price         Float
  bookings      Booking[]
  createdAt     DateTime  @default(now()) @map(name: "created_at")
  updatedAt     DateTime  @default(now()) @map(name: "updated_at")

  @@map("trains")
}

model Bus {
  id            String    @id @default(cuid())
  busNumber     String    @unique
  source        String
  destination   String
  departureTime DateTime
  arrivalTime   DateTime
  price         Float
  bookings      Booking[]
  createdAt     DateTime  @default(now()) @map(name: "created_at")
  updatedAt     DateTime  @default(now()) @map(name: "updated_at")

  @@map("buses")
}

model Hotel {
  id          String   @id @default(cuid())
  name        String
  location    String
  description String
  rooms       Room[]
  createdAt   DateTime @default(now()) @map(name: "created_at")
  updatedAt   DateTime @default(now()) @map(name: "updated_at")

  @@map("hotels")
}

model Room {
  id         String    @id @default(cuid())
  hotel      Hotel     @relation(fields: [hotelId], references: [id])
  hotelId    String
  roomNumber String
  capacity   Int
  price      Float
  bookings   Booking[]
  createdAt  DateTime  @default(now()) @map(name: "created_at")
  updatedAt  DateTime  @default(now()) @map(name: "updated_at")

  @@map("rooms")
}

model Booking {
  id        String   @id @default(cuid())
  userId    String
  train     Train?   @relation(fields: [trainId], references: [id])
  trainId   String?
  bus       Bus?     @relation(fields: [busId], references: [id])
  busId     String?
  room      Room?    @relation(fields: [roomId], references: [id])
  roomId    String?
  createdAt DateTime @default(now()) @map(name: "created_at")
  updatedAt DateTime @default(now()) @map(name: "updated_at")
  package   Package? @relation(fields: [packageId], references: [id])
  packageId String?

  @@map("bookings")
}

model Package {
  id          String    @id @default(cuid())
  name        String
  description String
  price       Float
  startDate   DateTime
  endDate     DateTime
  bookings    Booking[]
  createdAt   DateTime  @default(now()) @map(name: "created_at")
  updatedAt   DateTime  @default(now()) @map(name: "updated_at")

  @@map("packages")
}
